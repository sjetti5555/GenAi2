		===============================================
			Techniques for Re-Using the  Modules
					(OR)
			Number of approaches to Re-use Modules
		===============================================
=>We know that a module is a collection of Variables ,Functions and Class Names.
=>The purpose of Module is that to re-use the Variables ,Functions and Class Names of one 
    module in other part of the program.
=>To re-use Variables ,Functions and Class Names of module in other part of the program, we have two approaches. They are
			1) By using import statement.
			2) By using  from.....import statement.
---------------------------------------------------------------------------------------------------------------------
1) By using import statement:
------------------------------------------------
=>here import is a keyword
=>import statement is used for referfing or importing the variable names, function  names and 
   class names in current program.
=>import statement can be used in 4 ways. They are
------------------------------------------------------------------------------------------------------------------
Syntax1:        import    module name
=>This Syntax imports one module at a time in the current program
=>Example:     import   aop
			import calendar
			import  icici
------------------------------------------------------------------------------------------------------------------
Syntax2:        import    module name1,module name2.....module name-n
=>This Syntax imports multiple  modules at a time in the current program
=>Example:     import   aop, calendar, icici
------------------------------------------------------------------------------------------------------------------
Syntax3:        import    module name as alias name
=>This Syntax imports one module at a time with alias name in the current program
=>Example:     import   aop as a
			import calendar as c
			import  icici as k
------------------------------------------------------------------------------------------------------------------
Syntax4:        import    module name1 as alias name,module name2 as alias name.....module							name-n as alias name 
=>This Syntax imports multiple  modules with  alias name at a time in the current program
=>Example:     import   aop as a , calendar as c, icici as i

=>NOTE: After importing the modules in current program, we must access the variable names, Function names and Class Names in current program w.r.t  Module Name or Alias Name

		ModuleName.Variable Name
		ModuleName.Function Name
		ModuleName.Class Name
				(OR)
		Alias Name.Variable Name
		Alias Name.Function Name
		Alias Name.Class Name
=======================================================================
2) By using  from.....import statement.
--------------------------------------------------------------------------
2) By using from....  import statement.
=======================================
=>Here "form" "import" are the key words
=>The purpose of from....  import statement is that " To refer or access the variable names, function names and class names in current program directly without writing module name as alias names ." 
=> we can use  from.... import statement in 3 ways.
-------------------
Syntax-1:           from module name import Variable Names,Function Names, Class Names
------------------ 
=>This syntax imports the Variable Names,Function Names, Class Names of a module.

Example:      from calendar  import  month
                     from aop import sumop
		     from icici  import pi,e,simpleint
-----------------------------------------------------------------------------------------------------------
Syntax-2:   from module name import Variable Names as alias name,Function Names as alias 
                   name ,  Class Names as alias names.
-----------------------------------------------------------------------------------
=>This syntax imports the Variable Names,Function Names, Class Names of a module with alias Names

Example:      from calendar  import  month as m
                     from aop import addop as a,subop as s, mulop as m
		     from icici import  pi as p, e, simpleint as si
---------------------------------------------------------------------------------------------------------------------	
Syntax-3:       from module name import  *
---------------
=>This syntax imports ALL Variable Names,Function Names, Class Names of a module.
=>This syntax is not recommmended to use bcoz it imports required Features of Module and also import un-interrested features also imported and leads more main memory space.

Example:       from calendar   import  *
                       from aop import  *
		       from mathsinfo  import  *

=>Hence after importing all the variable names, Function names and class names by using "from ....import statement" , we must access variable names, Function names and class names Directly without using   Module Names or alias names.

			Variable Name
			Function Name
			Class  Name

=>Hence with "import statement"  we can give alias name for module names only but not for Variables Names, Function Names and Class Names.  Where as with "from ... import statement " we can give alias names for Variables Names, Function Names and Class Names but not for Module Name".
===================================X========================================