"""
QARagver4: Advanced Q&A System with Enhanced Monitoring and Intelligent Agents

Description:
This Python script implements an advanced and scalable Q&A system with the following features:

1. **File Monitoring and Processing:**
   - Monitors a folder for pre-existing, new, and modified files.
   - Processes various file types (e.g., .txt, .pdf, .docx, .xlsx, .pptx).
   - Extracts content, chunks text, and stores embeddings in ChromaDB.
   - Avoids reprocessing unchanged files by using file hashing.

2. **Question-Answering Agents:**
   - **Database Agent:** Retrieves relevant data chunks from ChromaDB.
   - **Answer Generation Agent:** Generates answers using OpenAI's GPT model.
   - **Review Agent:** Formats answers dynamically into bullet points, summaries, etc.
   - **Fallback Agent:** Provides responses when no relevant data is found.
   - **Personalization Agent:** Customizes answers based on user preferences (detailed or concise).

3. **Enhanced Source Information:**
   - Shows clear and user-friendly source details, including file names and text snippets.

4. **Session Context Tracking:**
   - Maintains session history for follow-up questions.
   - Supports context-aware responses to sequential queries.

5. **Dynamic Output Structuring:**
   - Formats answers dynamically based on user requests (e.g., paragraphs, bullet points).

6. **Robust Logging:**
   - Logs all events (file changes, errors, etc.) in a log file (`processing4.log`).

7. **Scalability:**
   - Modularized for handling diverse file types and queries.

Instructions:
- Specify the folder to monitor in `folder_to_monitor`.
- Run the script and interact with the Q&A system via the command line.
"""

"""
QARagver4: Enhanced Q&A System with Dynamic Monitoring and Intelligent Agents

Description:
This Python script implements an advanced Q&A system with the following features:

1. **File Monitoring and Processing:**
   - Monitors a specified folder for pre-existing, new, and modified files.
   - Processes various file types (e.g., .txt, .pdf, .docx, .xlsx, .pptx).
   - Extracts content, chunks text, and stores embeddings in ChromaDB.

2. **Question-Answering Agents:**
   - **Database Agent:** Retrieves relevant data chunks from ChromaDB.
   - **Answer Generation Agent:** Generates answers using OpenAI's GPT model.
   - **Review Agent:** Validates and dynamically formats answers (e.g., bullet points, summaries).
   - **Fallback Agent:** Provides meaningful responses when no relevant data is found.
   - **Personalization Agent:** Customizes responses based on user preferences (e.g., detailed or concise).

3. **Session Context Tracking:**
   - Maintains session history for follow-up questions.
   - Supports context-aware responses to sequential queries.

4. **Dynamic Output Structuring:**
   - Formats answers dynamically based on user requests (e.g., converting paragraphs to bullet points).

5. **Robust Logging:**
   - Logs all events (e.g., file changes, errors) to a log file (`processing.log`).

6. **Scalability:**
   - Built with modular agents and extensible monitoring to handle diverse file types and queries.

Why?
- To support advanced query handling with multiple intelligent agents.
- To provide dynamic, user-friendly answer formatting.
"""

"""
QARagver4: Enhanced Q&A System with Dynamic Monitoring and Intelligent Agents

Description:
This Python script implements an advanced Q&A system with the following features:

1. **File Monitoring and Processing:**
   - Monitors a specified folder for pre-existing, new, and modified files.
   - Processes various file types (e.g., .txt, .pdf, .docx, .xlsx, .pptx).
   - Extracts content, chunks text, and stores embeddings in ChromaDB.

2. **Question-Answering Agents:**
   - **Database Agent:** Retrieves relevant data chunks from ChromaDB.
   - **Answer Generation Agent:** Generates answers using OpenAI's GPT model.
   - **Review Agent:** Validates and dynamically formats answers (e.g., bullet points, summaries).
   - **Fallback Agent:** Provides meaningful responses when no relevant data is found.
   - **Personalization Agent:** Customizes responses based on user preferences (e.g., detailed or concise).

3. **Session Context Tracking:**
   - Maintains session history for follow-up questions.
   - Supports context-aware responses to sequential queries.

4. **Dynamic Output Structuring:**
   - Formats answers dynamically based on user requests (e.g., converting paragraphs to bullet points).

5. **Robust Logging:**
   - Logs all events (e.g., file changes, errors) to a log file (`processing.log`).

6. **Scalability:**
   - Built with modular agents and extensible monitoring to handle diverse file types and queries.

Instructions:
- Place the script in a folder and specify the folder to monitor in `folder_to_monitor`.
- Run the script, and interact with the Q&A system via the command line.
"""